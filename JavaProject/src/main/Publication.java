//
// THIS FILE IS AUTOMATICALLY GENERATED!!
//
// Generated at Tue 22-Nov-2011 by the VDM++ to JAVA Code Generator
// (v8.0 - Mon 09-Jul-2007 09:32:40)
//
// Supported compilers:
// jdk1.4
//

// ***** VDMTOOLS START Name=HeaderComment KEEP=NO
// ***** VDMTOOLS END Name=HeaderComment

// ***** VDMTOOLS START Name=package KEEP=NO
package main;

// ***** VDMTOOLS END Name=package

// ***** VDMTOOLS START Name=imports KEEP=NO

import jp.co.csk.vdm.toolbox.VDM.*;
import java.util.*;
import jp.co.csk.vdm.toolbox.VDM.jdk.*;
// ***** VDMTOOLS END Name=imports



public class Publication implements EvaluatePP {

// ***** VDMTOOLS START Name=vdmComp KEEP=NO
  static UTIL.VDMCompare vdmComp = new UTIL.VDMCompare();
// ***** VDMTOOLS END Name=vdmComp

// ***** VDMTOOLS START Name=name KEEP=NO
  public volatile String name = null;
// ***** VDMTOOLS END Name=name

// ***** VDMTOOLS START Name=description KEEP=NO
  public volatile String description = null;
// ***** VDMTOOLS END Name=description

// ***** VDMTOOLS START Name=date KEEP=NO
  public volatile Date date = null;
// ***** VDMTOOLS END Name=date

// ***** VDMTOOLS START Name=authors KEEP=NO
  public volatile HashSet authors = new HashSet();
// ***** VDMTOOLS END Name=authors

// ***** VDMTOOLS START Name=affiliation KEEP=NO
  public volatile Affiliation affiliation = null;
// ***** VDMTOOLS END Name=affiliation

// ***** VDMTOOLS START Name=references KEEP=NO
  public volatile HashSet references = new HashSet();
// ***** VDMTOOLS END Name=references

// ***** VDMTOOLS START Name=citations KEEP=NO
  public volatile HashSet citations = new HashSet();
// ***** VDMTOOLS END Name=citations

// ***** VDMTOOLS START Name=sentinel KEEP=NO
  volatile Sentinel sentinel;
// ***** VDMTOOLS END Name=sentinel


// ***** VDMTOOLS START Name=PublicationSentinel KEEP=NO
  class PublicationSentinel extends Sentinel {

    public final int setName = 0;

    public final int Publication = 1;

    public final int addCitation = 2;

    public final int compareDate = 3;

    public final int nr_functions = 4;


    public PublicationSentinel () throws CGException {}


    public PublicationSentinel (EvaluatePP instance) throws CGException {
      init(nr_functions, instance);
    }

  }
// ***** VDMTOOLS END Name=PublicationSentinel
;

// ***** VDMTOOLS START Name=evaluatePP KEEP=NO
  public Boolean evaluatePP (int fnr) throws CGException {
    return new Boolean(true);
  }
// ***** VDMTOOLS END Name=evaluatePP


// ***** VDMTOOLS START Name=setSentinel KEEP=NO
  public void setSentinel () {
    try {
      sentinel = new PublicationSentinel(this);
    }
    catch (CGException e) {
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=setSentinel


// ***** VDMTOOLS START Name=Publication KEEP=NO
  public Publication () throws CGException {
    try {
      setSentinel();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
  }
// ***** VDMTOOLS END Name=Publication


// ***** VDMTOOLS START Name=Publication KEEP=NO
  public Publication (final String n, final String des, final Date dat, final HashSet author, final Affiliation aff, final HashSet ref) throws CGException {

    try {
      setSentinel();
    }
    catch (Exception e){

      e.printStackTrace(System.out);
      System.out.println(e.getMessage());
    }
    {

      name = UTIL.ConvertToString(UTIL.clone(n));
      description = UTIL.ConvertToString(UTIL.clone(des));
      date = (Date) UTIL.clone(dat);
      authors = (HashSet) UTIL.clone(author);
      affiliation = (Affiliation) UTIL.clone(aff);
      references = (HashSet) UTIL.clone(ref);
      citations = (HashSet) UTIL.clone(new HashSet());
      {

        Reference ref_1 = null;
        for (Iterator enm_27 = references.iterator(); enm_27.hasNext(); ) {

          Reference elem_15 = (Reference) enm_27.next();
          ref_1 = (Reference) elem_15;
          {

            Publication obj_19 = null;
            obj_19 = ref_1.publication;
            Reference par_21 = null;
            Integer arg_22 = null;
            arg_22 = ref_1.chapter;
            Integer arg_23 = null;
            arg_23 = ref_1.line;
            par_21 = new Reference(arg_22, arg_23, this);
            obj_19.addCitation((Reference) par_21);
          }
        }
      }
    }
  }
// ***** VDMTOOLS END Name=Publication


// ***** VDMTOOLS START Name=compareDate KEEP=NO
  public Boolean compareDate (final Date d1, final Date d2) throws CGException {

    sentinel.entering(((PublicationSentinel) sentinel).compareDate);
    try {

      Boolean cond_3 = null;
      Integer var1_4 = null;
      var1_4 = d1.year;
      Integer var2_6 = null;
      var2_6 = d2.year;
      cond_3 = new Boolean((var1_4.intValue()) < (var2_6.intValue()));
      if (cond_3.booleanValue()) 
        return new Boolean(true);
      else {

        Boolean cond_8 = null;
        Boolean var1_9 = null;
        Integer var1_10 = null;
        var1_10 = d1.year;
        Integer var2_12 = null;
        var2_12 = d2.year;
        var1_9 = new Boolean(var1_10.intValue() == var2_12.intValue());
        {
          if ((cond_8 = var1_9).booleanValue()) {

            Boolean var2_14 = null;
            Integer var1_15 = null;
            var1_15 = d1.month;
            Integer var2_17 = null;
            var2_17 = d2.month;
            var2_14 = new Boolean((var1_15.intValue()) < (var2_17.intValue()));
            cond_8 = var2_14;
          }
        }
        if (cond_8.booleanValue()) 
          return new Boolean(true);
        else {

          Boolean cond_19 = null;
          Boolean var1_20 = null;
          Boolean var1_21 = null;
          Integer var1_22 = null;
          var1_22 = d1.year;
          Integer var2_24 = null;
          var2_24 = d2.year;
          var1_21 = new Boolean(var1_22.intValue() == var2_24.intValue());
          {
            if ((var1_20 = var1_21).booleanValue()) {

              Boolean var2_26 = null;
              Integer var1_27 = null;
              var1_27 = d1.month;
              Integer var2_29 = null;
              var2_29 = d2.month;
              var2_26 = new Boolean(var1_27.intValue() == var2_29.intValue());
              var1_20 = var2_26;
            }
          }
          {
            if ((cond_19 = var1_20).booleanValue()) {

              Boolean var2_31 = null;
              Integer var1_32 = null;
              var1_32 = d1.day;
              Integer var2_34 = null;
              var2_34 = d2.day;
              var2_31 = new Boolean((var1_32.intValue()) <= (var2_34.intValue()));
              cond_19 = var2_31;
            }
          }
          if (cond_19.booleanValue()) 
            return new Boolean(true);
          else 
            return new Boolean(false);
        }
      }
    }
    finally {
      sentinel.leaving(((PublicationSentinel) sentinel).compareDate);
    }
  }
// ***** VDMTOOLS END Name=compareDate


// ***** VDMTOOLS START Name=setName KEEP=NO
  public void setName (final String n) throws CGException {

    sentinel.entering(((PublicationSentinel) sentinel).setName);
    try {
      name = UTIL.ConvertToString(UTIL.clone(n));
    }
    finally {
      sentinel.leaving(((PublicationSentinel) sentinel).setName);
    }
  }
// ***** VDMTOOLS END Name=setName


// ***** VDMTOOLS START Name=addCitation KEEP=NO
  public void addCitation (final Reference r) throws CGException {

    if (!this.pre_addCitation(r).booleanValue()) 
      UTIL.RunTime("Run-Time Error:Precondition failure in addCitation");
    sentinel.entering(((PublicationSentinel) sentinel).addCitation);
    try {
      citations.add(r);
    }
    finally {
      sentinel.leaving(((PublicationSentinel) sentinel).addCitation);
    }
  }
// ***** VDMTOOLS END Name=addCitation


// ***** VDMTOOLS START Name=pre_addCitation KEEP=NO
  public Boolean pre_addCitation (final Reference r) throws CGException {

    Boolean varRes_2 = null;
    Date par_4 = null;
    Publication tmpRec_5 = null;
    tmpRec_5 = r.publication;
    par_4 = tmpRec_5.date;
    varRes_2 = compareDate((Date) date, (Date) par_4);
    return varRes_2;
  }
// ***** VDMTOOLS END Name=pre_addCitation

}
;
